//`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`
//              reces by x@rgs
//              under NYSL Version 0.9982
//
//`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`~^`

・ソースに就いて
 初心者が書いたものですので、見れたものではありません。参考になるような情報もありません。

・コンパイル方法
 [Microsoft Visual C++ 2010 Express Edition]
    1.ソリューションファイル「reces.sln」を開き、「ビルド」->「ソリューションのビルド」をクリックして下さい。
 [Code::blocks]
    1.ワークスペースファイル「reces.workspace」を開き、「Build」->「Build workspace」をクリックして下さい。


・派生作品について
 NYSL Version 0.9982に準拠してさえいれば煮るなり焼くなりお好きにどうぞ。
 ライセンスの条文については同梱の「NYSL_withfaq.TXT」をご覧下さいませ。
 ただし、各書庫ライブラリについてはそれぞれのライセンスに従いますのでご注意下さいませませ。
 もし派生作品を公開されるようであれば、サイトにて紹介致しますので、お気軽に連絡下さいませませませ。


・備忘録
 [Ver.0.00r23]
     ・誰得wcx対応。国産対応ソフトは皆無?
     ・Double Commander付属zip.wcxはUTF-8-MACで格納されていても正しく処理出来、
       Susie Plug-inと違い、Unicode文字にも対応しています。
     ・ただし、/mSzip.wcxすると落ちます。
     ・spi/wcxの共通パス除外を解凍時に行う様にしました。
     ・wcxによる圧縮対応は見送り。


 [Ver.0.00r22]
     ・今回は細かな不具合修正のみ。
     ・次バージョンでは某プラグインに対応する予定。


 [Ver.0.00r21]
     ・何故か再圧縮時のみ戻り値を設定していなかった。
     ・テスト時も戻り値を設定していなかった。
     ・Nobuyuki Honda氏のamzip.spi/Yak!氏の7z.dllとax7z_s.spiでお馴染みMac文字化けzipの解凍を確認。
       amzip.spiで処理が出来る一方、ax7z_s.spiで処理が出来ない書庫もある?
     ・/mSを実装したものの、Susie Plug-in位でしか役に立たないかも。統合アーカイバライブラリのszOptionBufferとかiModeとかは見ないふり。
     ・ごちゃごちゃした部分のほんのごく一部を整理しました。
     ・7-zip32.dll Ver.9.22.00.01の不具合修正によりsslib::Windowとおさらば。
     ・同じく7-zip32.dll Ver.9.22.00.01より、WIN_LONG_PATH定義でのビルドとなり、MAX_PATH以上であっても処理できるように!!!
       ただし、reces側は中途半端な対応に留まり、細かいところはテスト出来ていません。
       /me,/ml,/mtで入力ファイルがMAX_PATH以上のパスであれば、勝手に7-zip32.dllを使用するようにしました。
       出力については確認しません。
     ・圧縮/解凍後直ぐにライブラリを解放するように。
     ・DlgHook.dllを一時ディレクトリに書き出すように。
     ・書庫用Susie Plug-inかどうかの判定をファイル名ではなくGetPluginInfo()で行うようにすることで、
       amzip.spiの利用が可能に。


 [Ver.0.00r20]
     ・一部ライブラリのプログレスバーをファイル単位とすることで処理高速化。
     ・「/eb[level]」オプションについて、MoveFile()に失敗した場合、コピー->削除で対応するように。
     ・24x24アイコンを削除。
     ・ファイルサイズを少し削減。


 [Ver.0.00r19]
     ・LMZIP32.dll最高や! /LCID、/UESCなんて最初からいらんかったんや!
     ・ただ、複数ファイルの圧縮はr10,r11での7-zip32.dllと同じ処理しか思いつかない為、圧縮処理未対応としました。
       LMZIP32.dllはマルチバイト文字(日本語など)を用いたパスワード書庫が作成出来るので、
       可能であれば対応したかったのですが--;
     ・LMZIP32.dllでの処理時のプログレスバーはサイズではなくファイル数を元に表示しています。


 [Ver.0.00r18]
     ・reces経由でax7z_s.spiを使用すると、zipが処理出来ない不具合は、対応拡張子の列挙が不完全(GetPluginInfo()関連)であった為。
     ・偶にRemoveDirectory()に失敗し、Tempにディレクトリが残ってしまう不具合発見。
       ディレクトリの削除に失敗したならば、SHFileOperation()で再度削除を行う様にする様に。
     ・ディレクトリのタイムスタンプ復元処理で、C++と言うよりプログラミングそのものに関する初歩的なミスにより落ちる不具合を修正。


 [Ver.0.00r17]
     ・XacRett.dllでのリストファイル指定は「@」も二重引用符内に記述する必要があった様子。
       ["@list file"]
       7環境では気付けない不具合でした。


 [Ver.0.00r16]
     ・複数の二重引用符+末尾'\'パスが処理出来ない不具合について、__getmainargs()では対応できないため、
       GetCommandLine()で取得した文字列を自前で分割、ワイルドカード展開を行うように。
       ->r16a時点ではオプション中文字列に空白があると分割が失敗する不具合が...
     ・/msでライブラリのプレフィックスを指定出来るようにし、対応外の統合アーカイバライブラリも扱えるように。
     ・解凍レンジの「パス情報を最適化して展開する」や、tarの「--strip-components」風の/eb[level|x]を実装。
       ただし解凍後の処理となります。


 [Ver.0.00r15]
     ・今回より不具合修正版の公開の方法を変更。(候補aをVer.0.00rxxa、候補bをVer.0.00rxxb...)
     ・XacRett.dllはSetOwnerWindow()系が使用出来ないため、APIフックを用いて情報を取得し、プログレスバー出力に対応しました。
       具体的には、
       ・GetTextExtentPointA()をフック、lpSize->cx=0によりPathSetDlgItemPath()によるパスの省略を防止。
       ・GetDlgItem()をフック、引数nIDDlgItemがIDC_ENAME(1004)ならハンドルを保存。
       ・SetWindowTextA()をフック、引数hWndが保存したハンドルなら処理。
       と言う回りくどいことをしています。
     ・ディレクトリのタイムスタンプ復元にSystemTimeToFileTime()->LocalFileTimeToFileTime()としていた馬鹿な不具合を修正。
     ・ヘッダ暗号化7zの解凍を行うと無限ループに陥る不具合を修正。
       FindFirst()の戻り値を確認していなかったため発生していた模様。
       isSupportedArchive()の時点でsetDefaultPassword()することで解決。
     ・Applocaleを使用することで、文字化け書庫の解凍に対応。
       ただし、ロケールの切り替えのため、最大3つのreces.exeが起動してしまう。
           1.reces.exe[1]がロケールを切り替えてreces.exe[2]を起動。
           2.解凍であれば、ここで終了。再圧縮の場合、ロケールを元に戻してreces.exe[3]を起動...
     ・ファイル名に含まれるUnicodeエスケープシーケンスのデコードを行えるようにすることで、文字化け?書庫の解凍に対応。


 [Ver.0.00r14]
     ・r13は設定ファイルの取り扱いが手抜きだったので、最悪強制終了する始末...
     ・拡張子からの形式推測実装し忘れ(r12,r13)発覚。
     ・b2e32.dllに/msでのみ対応。/Dbと/P、/{と/}の組み合わせである程度使えるレベルにはなる筈...
     ・同梱のunrar32.dll x64/ユニコード対応版をversion 0.16にバージョンアップ。
     ・7-zip32.dllでの書庫判定処理を変更し、処理速度アップ?
     ・フィルタ適用処理の改善で速度アップ?
     ・DlgHook.dllについて、SendMessageTimeout()により解放されない問題を解決?
     ・reces.workspaceを追加。


 [Ver.0.00r13]
     ・r12がメモリリークのオンパレードであったため、人柱版を何度も公開することに。
     ・念願のspi対応。
     ・b2eへの対応は制限が多いため断念。
     ・メインのコンパイラをMicrosoft Visual C++ 2010 Expressに変更。
     ・Readme.txtのQ&Aコーナーが復活。


 [Ver.0.00r12]
     ・三度目の全ソース書き直し。と言いつつそのまま持ってきたものも...
     ・b2e32.dllやspiは次バージョンでのサポートを検討中。
     ・unrar.dll 5.xを用いるとディレクトリの解凍で問題が発生し、正しく解凍できない?
     ・VC++EEで作成したプロジェクトファイルを追加しました。あまり確認していませんのでご注意を。


 [Ver.0.00r11]
     ・bregonig.dllやB2E32.DLLのサポートを検討するもややこしいことになってきたので今回は見送ることに。


 [Ver.0.00r10]
     ・一部メッセージが英語であるのは、途中(非公開のTarHeart Ver.1.00～reces Ver.0.00r10 ANSI版)までメッセージをすべて英語で表示していた頃の名残(笑)です。
     ・cab書庫の再圧縮と圧縮はcab32.dllに何らかの動きがあり次第、実装を試みる予定です。それまでは面倒なので実装しないと思います。
     ・Readme.txtにも書きましたが、XacRett.dllによるパスワード付zip書庫の解凍が確認できません。自前で修正してビルドしようにも何やら面倒そう...
     ・「DlgHook.dll」はソースファイル名からもわかるように、パスワード入力ダイアログをフックし、
       recesで文字列入力、OKボタン押下するためのものです。
     ・Unicode&4GB対応を謳っていますが余り確認していませんのでご注意を。
     ・現在、7-zip32.dllによる複数ファイル/ディレクトリの圧縮にはaコマンドとuコマンドを組み合わせて用いています。
       7-zipCMD.txtには「注：.7z ソリッド書庫の更新は幾つか再圧縮が必要になるので時間が掛ります。」
       とありますが、
       この方法以外に複数ファイル/ディレクトリを圧縮する方法が思いつかないので仕方がない...
      ・追記:7-zip32.dllによる圧縮方法はr12で改善されました。
